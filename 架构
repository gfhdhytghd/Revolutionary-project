# 架构
## 用户本地
### 数据
#### 用户ID和昵称
#### 自己的公钥和私钥
#### 消息
### 密钥生成
#### RSA
##### 8192位
###### 生成公钥/私钥
* 公钥签名和公钥MD5
### 登录验证
#### 一般
#### 加密狗
### 新设备登录操作
#### 密钥更新和重新分发
#### 加密狗储存
### 发送
#### 添加时间戳，随机校验码（防止某些情况造成的重复收到消息），RSA公钥加密和MD5运算
#### 检查PPP连接（握手）
##### 握手不成功
##### 从tracker获取状态和连接
###### 判定对方未上线或者状态未知
###### 离线：暂存于本地等待发送
###### 未知：发送一份并暂存一份等待确认上线后发送
#### 握手成功
#### 发送密文和明文的MD5
### 接受
#### 握手成功
#### 接收密文和MD5
#### RSA公钥解密和MD5验证
#### 检查校验码和时间戳排除重复消息，根据时间戳进行消息顺序排列
### 群聊
#### 1-50人
##### 基于Gossip协议，使用随机选择节点和版本号标记，在低于50人情况下直接使用反馈机制向群主和管理员发送反馈。
#### 51-2500人
##### 基于gossip协议，群中随机挑选50人，消息直接传递，向这50人传递的信息中包含50人的ID和一个包含50人的用户域，然后50人使用版本号标记和反馈机制在选定的用户域中gossip传播信息
### 高级身份验证
#### 用户间自己定一个密码
#### 身份怀疑时，发送验证
#### Digest Authentication
### tracker获取
#### 随版本更新推送
#### 用户手动添加
### 添加好友
#### 一般
##### 发现
###### 连接tracker查询ID
###### 获取连接方式（PPP）
###### PPP对方，获取昵称，头像
##### 发送
###### 发送ID，昵称，头像和
签名的公钥以及公钥的MD5
##### 接受
###### 储存对方的ID和公钥
###### tracker查询建立PPP
###### 发送签名的的公钥和MD5
#### 更高安全性
##### 加密密钥
###### 密码的MD5
##### 发现
###### 同上
##### 发送
###### 信息同上，但是公钥用AES加密
##### 接受
###### 填写密码，解密公钥部分，其余同上
#### 无tracker
##### 手动添加文件
##### 文件内容
###### ID 昵称，头像
###### 公钥
###### IP（公网或内网穿透）
* 此项可手动更新
##### 添加
###### 检测、建立连接
* 发送自己的信息和公钥
#### 带验证问题
##### 从服务器接用户信息和加密的联系方式和签名的验证问题明文
##### 回答问题，进行MD5
##### 使用MD5解密联系方式判断正误
### 在线状态查询
#### 状态检测
##### 发送测试信息（随机数）
##### 计算并返回（随机数+公钥， MD5）
##### 验证
###### 正常响应
* 判定在线
###### 无响应或者错误
* 连接tracker更新连接方式和在线状态
* 连接方式有更新，在线
    * 重新执行状态检测
* 连接方式有更新，离线
    * 重新执行状态检测
        * 通过
            * 在线
        * 不通过
            * 离线
* 连接方式无更新，离线
    * 离线
* 连接方式无更新，在线
    * “状态未知”
#### 状态检测2
##### Gossip传播的在线状态
#### 检测时机
##### 全局和用户信息更新点
##### 手动
### 信息更新点判定
#### 用户
##### 进入用户聊天界面时
##### 发送信息时
#### 全局
##### 进入应用时
##### 每隔一段时间（用户设定）（仅前台）
### 状态更新
#### 连接方式
##### 系统端口获取网络状态变化，变化时检测网络并发送新的连接方式到tracker，在PPP连不上时也进行刷新
#### 在线状态
##### 手动下线时发送更新给tracker
##### 上线时发送更新给tracker，同时gossip
#### 昵称头像更新
##### 更新时Gossip传播
##### 进入聊天界面时传输头像昵称的MD5
###### 一致
* 不管
###### 不一致
* PPP传输更新
### 内容审查
#### 无
## tracker
### 储存信息：（全部明文）
连接到此处的用户ID
在线状态和通讯方式
以及验证问题
### 用户查询
#### 验证用户端合法性
##### 用户请求
##### 服务器发送随机数
##### Token+随机数 哈希
##### 哈希发回，校验
#### 接收用户要求的ID和指令
#### 发送指令要求的信息
### 状态判定
#### 接收客户端发来的状态更新
